<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qaprosoft.argon.dbaccess.dao.mysql.UserDAO">

	<insert id="createUser" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			INSERT INTO argon.USERS (LAST_NAME, DOB, USERNAME, PASSWORD, ENABLED, VERIFIED, EMAIL, FIRST_NAME, STATUS_ID)
			VALUES (
				#{lastName},
				#{dob},
				#{username},
				#{password},
				#{enabled},
				#{verified},
				#{email},
				#{firstName},
				#{status.id}
			)
		]]>
	</insert>


	<sql id="getUser">
		<![CDATA[
			SELECT
				U.ID AS USER_ID,
				U.LAST_NAME AS USER_LAST_NAME,
				U.DOB AS USER_DOB,
				U.USERNAME AS USER_USERNAME,
				U.PASSWORD AS USER_PASSWORD,
				U.ENABLED AS USER_ENABLED,
				U.VERIFIED AS USER_VERIFIED,
				U.CREATED_AT AS USER_CREATED_AT,
				U.EMAIL AS USER_EMAIL,
				U.FIRST_NAME AS USER_FIRST_NAME,
				U.MODIFIED_AT AS USER_MODIFIED_AT,
				A.ID AS AUTHORITY_ID,
				A.AUTHORITY AS AUTHORITY_TYPE,
				A.MODIFIED_AT AS AUTHORITY_MODIFIED_AT,
				A.CREATED_AT AS AUTHORITY_CREATED_AT,
				ST.MODIFIED_AT AS STATUS_MODIFIED_AT,
				ST.CREATED_AT AS STATUS_CREATED_AT,
				ST.ID AS STATUS_ID,
				ST.STATUS AS STATUS_TYPE
			FROM argon.USERS U
			LEFT JOIN argon.USER_AUTHORITIES UA
			ON U.ID = UA.USER_ID
			LEFT JOIN argon.AUTHORITIES A
			ON UA.AUTHORITY_ID = A.ID
			LEFT JOIN argon.STATUSES ST
			ON U.STATUS_ID = ST.ID
		]]>
	</sql>

	<sql id="searchUsersSql">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="null != id">
	            <![CDATA[
	               AND U.ID = #{id}
	            ]]>
			</if>
			<if test="null != username">
	            <![CDATA[
	               AND LOWER(U.USERNAME) LIKE LOWER(CONCAT(#{username}, '%')) 
	            ]]>
			</if>
			<if test="null != email">
	            <![CDATA[
	               AND LOWER(U.EMAIL) LIKE LOWER(CONCAT(#{email}, '%')) 
	            ]]>
			</if>
			<if test="null != firstLastName">
	            <![CDATA[
	               AND LOWER(CONCAT(U.FIRST_NAME, ' ', U.LAST_NAME)) LIKE LOWER(CONCAT('%', #{firstLastName}, '%')) 
	            ]]>
			</if>
			<if test="null != ageMin">
	            <![CDATA[
	               AND timestampdiff(YEAR, U.DOB, CURDATE()) >= #{ageMin}
	            ]]>
			</if>
			<if test="null != ageMax">
	            <![CDATA[
	               AND timestampdiff(YEAR, U.DOB, CURDATE()) <= #{ageMax}
	            ]]>
			</if>
		</trim>
	</sql>

	<select id="getUserById" resultMap="UserResultMap">
		<include refid="getUser" />
		<![CDATA[
			WHERE U.ID = #{id}
		]]>
	</select>

	<select id="getUserByEmail" resultMap="UserResultMap">
		<include refid="getUser" />
		<![CDATA[
			WHERE U.EMAIL = #{email}
		]]>
	</select>

	<select id="getUserByUserName" resultMap="UserResultMap">
		<include refid="getUser" />
		<![CDATA[
			WHERE U.USERNAME = #{username}
		]]>
	</select>

	<select id="searchUsers" resultMap="UserResultMap">
		<include refid="getUser" />
		<include refid="searchUsersSql" />
		<![CDATA[
			ORDER BY U.USERNAME ${sortOrder}
			LIMIT #{pageSize} OFFSET #{offset}
		]]>
	</select>

	<select id="getUserSearchCount" resultType="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(*) 
			FROM argon.USERS U
		]]>
		<include refid="searchUsersSql" />
	</select>

	<select id="getUsersForConfirmationMailing" resultMap="UserResultMap">
		<include refid="getUser" />
		<![CDATA[
			INNER JOIN CONFIRMATIONS C
			ON U.ID = C.USER_ID
			WHERE VERIFIED = 0
			AND C.ID IS NULL
		]]>
	</select>


	<select id="getBlacklistedUsersInChat" resultMap="UserResultMap">
		<include refid="getUser" />
		<![CDATA[
			LEFT JOIN BLACKLIST BL
       		ON U.ID = BL.USER_ID
			WHERE BL.CHAT_ID = #{chatId}
		]]>
	</select>

	<update id="updateUser">
		<![CDATA[
			UPDATE argon.USERS U
			SET
				LAST_NAME = #{lastName},
				DOB = #{dob},
				USERNAME = #{username},
				PASSWORD = #{password},
				ENABLED = #{enabled},
				VERIFIED = #{verified},
				EMAIL = #{email},
				FIRST_NAME = #{firstName},
				STATUS_ID = #{status.id}
			WHERE U.ID = #{id}
		]]>
	</update>

	<sql id="deleteUser">
		<![CDATA[
			DELETE
			FROM argon.USERS 
		]]>
	</sql>

	<delete id="deleteUserByEmail">
		<include refid="deleteUser" />
		<![CDATA[
			WHERE USERS.EMAIL = #{email}
		]]>
	</delete>

	<delete id="deleteUserByUserName">
		<include refid="deleteUser" />
		<![CDATA[
			WHERE USERS.USERNAME = #{username}
		]]>
	</delete>

	<delete id="deleteUserById">
		<include refid="deleteUser" />
		<![CDATA[
			WHERE USERS.ID = #{id}
		]]>
	</delete>

	<insert id="addAuthority">
		<![CDATA[
			INSERT INTO argon.USER_AUTHORITIES (USER_ID, AUTHORITY_ID)
			VALUES (
				#{userId},
				#{authorityId}
			)
		]]>
	</insert>

	<delete id="deleteAuthority">
		<![CDATA[
			DELETE
			FROM argon.USER_AUTHORITIES
			WHERE USER_ID = #{userId}
			AND AUTHORITY_ID = #{authorityId}
		]]>
	</delete>


	<resultMap type="com.qaprosoft.argon.models.db.User" id="UserResultMap"
		autoMapping="true">
		<id column="USER_ID" property="id" />
		<result column="USER_LAST_NAME" property="lastName" />
		<result column="USER_DOB" property="dob" />
		<result column="USER_USERNAME" property="username" />
		<result column="USER_PASSWORD" property="password" />
		<result column="USER_ENABLED" property="enabled" />
		<result column="USER_VERIFIED" property="verified" />
		<result column="USER_CREATED_AT" property="createdAt" />
		<result column="USER_EMAIL" property="email" />
		<result column="USER_FIRST_NAME" property="firstName" />
		<result column="USER_MODIFIED_AT" property="modifiedAt" />
		<association property="status"
			javaType="com.qaprosoft.argon.models.db.Status"
			resultMap="com.qaprosoft.argon.dbaccess.dao.mysql.StatusDAO.StatusResultMap" />
		<collection property="authorities" javaType="java.util.List"
			ofType="com.qaprosoft.argon.models.db.Authority"
			resultMap="com.qaprosoft.argon.dbaccess.dao.mysql.AuthorityDAO.AuthorityResultMap" />
	</resultMap>
</mapper>